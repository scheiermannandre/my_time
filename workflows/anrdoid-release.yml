name: Android Release

# 1 - Controls when the workflow will run
on:
  # 2 - Triggers the workflow on push or pull request events for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # 3 - Allows you to run this workflow manually from the Actions tab from your GitHub repo
  workflow_dispatch:

# 4 - Contains a single job called build
jobs:
  # 5 - Contains the type of runner that the job will run on
  build:
    # 6 - Uses steps to represent a sequence of tasks that will be executed as part of job
    runs-on: ubuntu-latest

    # 7 - Readies your repository under $GITHUB_WORKSPACE, so your job can access it
    steps:
      # 8 - Sets up Java so your job can use it for the Flutter app build
      - uses: actions/checkout@v3
      # 9 - Sets up Flutter using the subosito Flutter workflow
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'
      # 10 - Adjusts to the Flutter version you are working with
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.0.0"
          channel: 'stable'
          cache: true
      # 11 - Runs a single command using the runnerâ€™s shell
      - name: Get dependencies
        run: flutter pub get

      # Runs a set of commands using the runners shell
      - name: Start release build
        run: flutter build appbundle